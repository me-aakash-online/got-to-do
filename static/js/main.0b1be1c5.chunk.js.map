{"version":3,"sources":["globals/constants/index.js","store/initialState.js","store/action-creators/todos.js","store/action-creators/list-open.js","components/header/header.jsx","components/sidebar/categories/categories.jsx","store/action-creators/selection.js","components/sidebar/sidebar.jsx","components/todo-menu/todo-item.jsx","components/todo-menu/todo-list.jsx","components/home/home.jsx","store/reducers/todo-reducer.js","store/reducers/category-reducer.js","store/action-creators/categories.js","store/reducers/current-selection-reducer.js","store/reducers/current-todo-reducer.js","store/reducers/bucket-list-status.js","store/reducers/index.js","store/index.js","store/localStorage.js","components/todo/todo-name/todo-name.jsx","components/todo/todo-completed/todo-completed.jsx","components/todo/todo-category/todo-category.jsx","components/todo/todo.jsx","App.js","serviceWorker.js","index.js"],"names":["LABELS","HEADER","SIDEBAR","CATEGORIES","DEFAULTBUCKET","TODO","NEWTODO","EDITTODO","NAME","COMPLETED","CATEGORY","ERROR","TODOMENU","DONE","NOTDONE","EMPTY","EMPTYBUCKET","categories","initialState","todos","currentSelection","currentTodo","isBucketListOpen","ADD_TODO","MODIFY_TODO","DELETE_TODO","UPDATE_CURRENT_TODO","RESET_CURRENT_TODO","addTodo","name","status","categoryId","type","payload","modifyTodo","id","deleteTodo","updateCurrentTodo","resetCurrentTodo","SET_BUCKET_LIST_OPEN","setBucketListOpenStatus","Header","history","useHistory","className","onClick","push","connect","state","dispatch","updateCurrentCategory","category","changeSelection","handleClick","e","target","map","item","i","key","isOpen","setOpen","data-testid","fill","stroke","viewBox","xmlns","strokeLinecap","strokeLinejoin","strokeWidth","d","fillRule","clipRule","setCurrentTodo","removeItem","stopPropagation","Fragment","defaultCategoy","currentCategory","list","filter","length","Home","require","default","TodoReducer","action","Date","now","rest","CategoryReducer","Set","CurrentSelectionReducer","CurrentTodoReducer","BucketListStatusReducer","RootReducer","combineReducers","persistedState","sessionStorage","getItem","JSON","parse","err","getState","store","createStore","subscribe","serializedState","stringify","setItem","setState","TodoName","register","errors","htmlFor","draggable","ref","required","role","TodoCompleted","autoComplete","value","find","onTodoSave","todo","isUpdate","onCategorySave","useForm","defaultValues","handleSubmit","onSubmit","data","undefined","trim","goBack","App","basename","path","component","Todo","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0b1be1c5.chunk.js","sourcesContent":["const LABELS = {\n    HEADER: 'Got-To-Do',\n    SIDEBAR: {\n        CATEGORIES: 'Buckets',\n        DEFAULTBUCKET: 'All',\n    },\n    TODO: {\n        NEWTODO: 'New To-do',\n        EDITTODO: 'Edit To-do',\n        NAME: 'Name',\n        COMPLETED: 'Completed',\n        CATEGORY: 'Choose Bucket',\n        ERROR: 'This field is required',\n    },\n    TODOMENU: {\n        DONE: 'Completed',\n        NOTDONE: 'Pending',\n        EMPTY: 'No To-dos Yet!',\n        EMPTYBUCKET: 'No To-dos in this Bucket!',\n    },\n};\n\nexport default LABELS;\n","import LABELS from '../globals/constants';\n\nconst todos = [];\n\nconst categories = [LABELS.SIDEBAR.DEFAULTBUCKET];\n\nconst currentSelection = categories[0];\n\nconst currentTodo = null;\n\nconst isBucketListOpen = false;\n\nconst initialState = {\n    todos,\n    categories,\n    currentSelection,\n    currentTodo,\n    isBucketListOpen,\n};\n\nexport default initialState;\n","export const ADD_TODO = 'ADD_TODO';\nexport const MODIFY_TODO = 'MODIFY_TODO';\nexport const DELETE_TODO = 'DELETE_TODO';\nexport const UPDATE_CURRENT_TODO = 'UPDATE_CURRENT_TODO';\nexport const RESET_CURRENT_TODO = 'RESET_CURRENT_TODO';\n\nexport const addTodo = ({ name, status, categoryId }) => ({\n    type: ADD_TODO,\n    payload: {\n        name,\n        status,\n        categoryId,\n    },\n});\n\nexport const modifyTodo = ({ id, name, status, categoryId }) => ({\n    type: MODIFY_TODO,\n    payload: {\n        id,\n        name,\n        status,\n        categoryId,\n    },\n});\n\nexport const deleteTodo = (id) => ({\n    type: DELETE_TODO,\n    payload: id,\n});\n\nexport const updateCurrentTodo = (id) => ({\n    type: UPDATE_CURRENT_TODO,\n    payload: id,\n});\n\nexport const resetCurrentTodo = () => ({\n    type: RESET_CURRENT_TODO,\n});\n","export const SET_BUCKET_LIST_OPEN = 'SET BUCKET LIST OPEN';\n\nexport const setBucketListOpenStatus = (status) => ({\n    type: SET_BUCKET_LIST_OPEN,\n    payload: status,\n});\n","import React from 'react';\nimport './header.scss';\nimport { useHistory } from 'react-router-dom';\nimport LABELS from '../../globals/constants';\n\nconst Header = () => {\n    let history = useHistory();\n\n    function handleClick() {\n        history.push('/');\n    }\n\n    return (\n        <header className=\"header-container\">\n            <div className=\"header\">\n                <button className=\"header__button\" onClick={handleClick}>\n                    {LABELS.HEADER}\n                </button>\n                <div className=\"header__bar\"></div>\n            </div>\n        </header>\n    );\n};\n\nexport default Header;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { changeSelection } from '../../../store/action-creators/selection';\nimport './categories.scss';\n\nconst Categories = ({\n    categories,\n    currentSelection,\n    updateCurrentCategory,\n}) => {\n    const handleClick = (e) => {\n        const name = e.target.id;\n        name !== currentSelection && updateCurrentCategory(name);\n    };\n\n    return (\n        <div className=\"category\">\n            {categories.map((item, i) => (\n                <div\n                    id={item}\n                    className=\"category__item\"\n                    key={i}\n                    onClick={handleClick}\n                >\n                    <span>{item}</span>\n                    {item === currentSelection && (\n                        <div className=\"category__item--active\" />\n                    )}\n                </div>\n            ))}\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    categories: [...state.categories],\n    currentSelection: state.currentSelection,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    updateCurrentCategory: (category) => dispatch(changeSelection(category)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Categories);\n","export const CHANGE_SELECTION = 'CHANGE_SELECTION';\n\nexport const changeSelection = (category) => ({\n    type: CHANGE_SELECTION,\n    payload: category,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport LABELS from '../../globals/constants';\nimport { setBucketListOpenStatus } from '../../store/action-creators/list-open';\nimport { resetCurrentTodo } from '../../store/action-creators/todos';\nimport Categories from './categories/categories';\nimport './sidebar.scss';\n\nconst Sidebar = ({ resetCurrentTodo, isOpen, setOpen }) => {\n    const history = useHistory();\n\n    const handleClick = () => {\n        resetCurrentTodo();\n        history.push('/todo');\n    };\n\n    const toggleOpen = () => {\n        setOpen(!isOpen);\n    };\n\n    return (\n        <aside className=\"sidebar\">\n            <div\n                data-testid=\"sidebar-create-todo\"\n                className=\"sidebar__button\"\n                onClick={handleClick}\n            >\n                <svg\n                    className=\"sidebar__icon\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    viewBox=\"0 0 24 24\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"\n                    />\n                </svg>\n            </div>\n            <div className=\"divider\"></div>\n            <div\n                data-testid=\"sidebar-open-button\"\n                className=\"sidebar__subtitle\"\n                onClick={toggleOpen}\n            >\n                <p className=\"\">{LABELS.SIDEBAR.CATEGORIES}</p>\n                {isOpen ? (\n                    <svg\n                        className=\"dropdown-icon\"\n                        fill=\"currentColor\"\n                        viewBox=\"0 0 20 20\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                        <path\n                            fillRule=\"evenodd\"\n                            d=\"M14.707 12.707a1 1 0 01-1.414 0L10 9.414l-3.293 3.293a1 1 0 01-1.414-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 010 1.414z\"\n                            clipRule=\"evenodd\"\n                        />\n                    </svg>\n                ) : (\n                    <svg\n                        className=\"dropdown-icon\"\n                        fill=\"currentColor\"\n                        viewBox=\"0 0 20 20\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                        <path\n                            fillRule=\"evenodd\"\n                            d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\"\n                            clipRule=\"evenodd\"\n                        />\n                    </svg>\n                )}\n            </div>\n            {isOpen && <Categories />}\n        </aside>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    isOpen: state.isBucketListOpen,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    resetCurrentTodo: () => dispatch(resetCurrentTodo()),\n    setOpen: (status) => dispatch(setBucketListOpenStatus(status)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport LABELS from '../../globals/constants';\nimport {\n    deleteTodo,\n    updateCurrentTodo,\n} from '../../store/action-creators/todos';\nimport './todo-list.scss';\n\nconst TodoItem = ({ setCurrentTodo, removeItem, id, name, status }) => {\n    const history = useHistory();\n\n    const handleClick = () => {\n        setCurrentTodo(id);\n        history.push(`/todo`);\n    };\n\n    const handleDelete = (e) => {\n        e.stopPropagation();\n        removeItem(id);\n    };\n\n    return (\n        <div className=\"todo-item\" onClick={handleClick}>\n            <div className=\"todo-item__button\" onClick={handleDelete}>\n                <svg\n                    className=\"delete-icon\"\n                    fill=\"currentColor\"\n                    viewBox=\"0 0 20 20\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\"\n                        clipRule=\"evenodd\"\n                    />\n                </svg>\n            </div>\n            <p className=\"todo-item__title\">{name}</p>\n            <div className=\"todo-item__spacer\"></div>\n            <div className=\"divider\"></div>\n            <p className=\"todo-item__status\">\n                {status ? (\n                    <React.Fragment>\n                        {LABELS.TODOMENU.DONE}\n                        <svg\n                            className=\"icon\"\n                            fill=\"currentColor\"\n                            viewBox=\"0 0 20 20\"\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                        >\n                            <path\n                                fillRule=\"evenodd\"\n                                d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\"\n                                clipRule=\"evenodd\"\n                            />\n                        </svg>\n                    </React.Fragment>\n                ) : (\n                    LABELS.TODOMENU.NOTDONE\n                )}\n            </p>\n        </div>\n    );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n    setCurrentTodo: (id) => dispatch(updateCurrentTodo(id)),\n    removeItem: (id) => dispatch(deleteTodo(id)),\n});\n\nexport default connect(null, mapDispatchToProps)(TodoItem);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport TodoItem from './todo-item';\nimport './todo-list.scss';\nimport initialState from '../../store/initialState';\nimport LABELS from '../../globals/constants';\n\nconst defaultCategoy = initialState.categories[0];\n\nconst TodoList = ({ todos, currentCategory }) => {\n    const list = todos.filter(\n        (item) =>\n            item.categoryId === currentCategory ||\n            currentCategory === defaultCategoy\n    );\n\n    return (\n        <section className=\"todo-menu-container\">\n            <div className=\"todo-menu\">\n                {!!list.length ? (\n                    list.map((item) => (\n                        <TodoItem\n                            key={item.id}\n                            id={item.id}\n                            name={item.name}\n                            status={item.status}\n                        />\n                    ))\n                ) : (\n                    <h5>\n                        {currentCategory === defaultCategoy\n                            ? LABELS.TODOMENU.EMPTY\n                            : LABELS.TODOMENU.EMPTYBUCKET}\n                    </h5>\n                )}\n            </div>\n        </section>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    todos: state.todos.map(({ name, status, categoryId, id }) => ({\n        name,\n        status,\n        categoryId,\n        id,\n    })),\n    currentCategory: state.currentSelection,\n});\n\nexport default connect(mapStateToProps)(TodoList);\n","import React from 'react';\nimport Sidebar from '../sidebar/sidebar';\nimport TodoList from '../todo-menu/todo-list';\nimport './home.scss';\n\nconst Home = () => {\n    return (\n        <section className=\"home\">\n            <Sidebar />\n            <TodoList />\n        </section>\n    );\n};\n\nexport default Home;\n","const {\n    ADD_TODO,\n    MODIFY_TODO,\n    DELETE_TODO,\n} = require('../action-creators/todos');\nconst { default: initialState } = require('../initialState');\n\nconst TodoReducer = (state = initialState.todos, action) => {\n    switch (action.type) {\n        case ADD_TODO:\n            return [\n                ...state,\n                {\n                    ...action.payload,\n                    id: `${Date.now()}${state.length}`,\n                },\n            ];\n        case MODIFY_TODO:\n            const { id, ...rest } = action.payload;\n            return state.map((item) => {\n                if (item.id === id) {\n                    return {\n                        id,\n                        ...rest,\n                    };\n                }\n                return item;\n            });\n        case DELETE_TODO:\n            return state.filter((item) => item.id !== action.payload);\n        default:\n            return state;\n    }\n};\n\nexport default TodoReducer;\n","import initialState from '../initialState';\nimport { ADD_CATEGORY } from '../action-creators/categories';\n\nconst CategoryReducer = (state = initialState.categories, action) => {\n    switch (action.type) {\n        case ADD_CATEGORY:\n            return [...new Set([...state, action.payload])];\n        default:\n            return state;\n    }\n};\n\nexport default CategoryReducer;\n","export const ADD_CATEGORY = 'ADD_CATEGORY';\n\nexport const addCategory = (categoryName) => ({\n    type: ADD_CATEGORY,\n    payload: categoryName,\n});\n","import { CHANGE_SELECTION } from '../action-creators/selection';\nimport initialState from '../initialState';\n\nconst CurrentSelectionReducer = (\n    state = initialState.currentSelection,\n    action\n) => {\n    switch (action.type) {\n        case CHANGE_SELECTION:\n            return action.payload;\n        default:\n            return state;\n    }\n};\n\nexport default CurrentSelectionReducer;\n","const {\n    UPDATE_CURRENT_TODO,\n    RESET_CURRENT_TODO,\n} = require('../action-creators/todos');\nconst { default: initialState } = require('../initialState');\n\nconst CurrentTodoReducer = (state = initialState.currentTodo, action) => {\n    switch (action.type) {\n        case UPDATE_CURRENT_TODO:\n            return action.payload;\n        case RESET_CURRENT_TODO:\n            return null;\n        default:\n            return state;\n    }\n};\n\nexport default CurrentTodoReducer;\n","const { SET_BUCKET_LIST_OPEN } = require('../action-creators/list-open');\nconst { default: initialState } = require('../initialState');\n\nconst BucketListStatusReducer = (\n    state = initialState.isBucketListOpen,\n    action\n) => {\n    switch (action.type) {\n        case SET_BUCKET_LIST_OPEN:\n            return action.payload;\n        default:\n            return state;\n    }\n};\n\nexport default BucketListStatusReducer;\n","import TodoReducer from './todo-reducer';\nimport CategoryReducer from './category-reducer';\nimport CurrentSelectionReducer from './current-selection-reducer';\nimport CurrentTodoReducer from './current-todo-reducer';\nimport BucketListStatusReducer from './bucket-list-status';\n\nconst { combineReducers } = require('redux');\n\nconst RootReducer = combineReducers({\n    todos: TodoReducer,\n    categories: CategoryReducer,\n    currentSelection: CurrentSelectionReducer,\n    currentTodo: CurrentTodoReducer,\n    isBucketListOpen: BucketListStatusReducer,\n});\n\nexport default RootReducer;\n","import { createStore } from 'redux';\nimport RootReducer from './reducers';\nimport initialState from './initialState';\nimport { getState, setState } from './localStorage';\n\nlet persistedState = getState();\npersistedState = persistedState ? persistedState : initialState;\n\nconst store = createStore(RootReducer, persistedState);\n\nstore.subscribe(() => {\n    setState(store.getState());\n});\n\nexport default store;\n","export const getState = () => {\n    try {\n        const state = sessionStorage.getItem('state');\n        if (state === null) {\n            return undefined;\n        }\n        return JSON.parse(state);\n    } catch (err) {\n        return undefined;\n    }\n};\n\nexport const setState = (item) => {\n    try {\n        const serializedState = JSON.stringify(item);\n        sessionStorage.setItem('state', serializedState);\n    } catch (err) {\n        // do something imp\n    }\n};\n","import React from 'react';\nimport LABELS from '../../../globals/constants';\n\nconst TodoName = ({ register, errors }) => {\n    return (\n        <div className=\"todo-item\">\n            <label className=\"todo-item__label\" htmlFor=\"todos\">\n                {LABELS.TODO.NAME}\n            </label>\n            <div className=\"todo-item__text\">\n                <textarea\n                    draggable={false}\n                    name=\"name\"\n                    ref={register({ required: true })}\n                    id=\"todos\"\n                ></textarea>\n                {errors.name && (\n                    <span className=\"todo-item__error\" role=\"alert\">\n                        {LABELS.TODO.ERROR}\n                    </span>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default TodoName;\n","import React from 'react';\nimport LABELS from '../../../globals/constants';\n\nconst TodoCompleted = ({ register }) => {\n    return (\n        <div className=\"todo-item\">\n            <label className=\"todo-item__label\" htmlFor=\"completed\">\n                {LABELS.TODO.COMPLETED}\n            </label>\n            <input\n                name=\"status\"\n                ref={register}\n                id=\"completed\"\n                type=\"checkbox\"\n            />\n        </div>\n    );\n};\n\nexport default TodoCompleted;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport LABELS from '../../../globals/constants';\nimport initialState from '../../../store/initialState';\n\nconst TodoCategory = ({ categories, register, errors }) => {\n    return (\n        <div className=\"todo-item\">\n            <label className=\"todo-item__label\" htmlFor=\"bucket\">\n                {LABELS.TODO.CATEGORY}\n            </label>\n            <div className=\"todo-item__text\">\n                <input\n                    name=\"categoryId\"\n                    ref={register({ required: true })}\n                    id=\"bucket\"\n                    type=\"text\"\n                    list=\"bucketList\"\n                    autoComplete=\"off\"\n                />\n                <datalist id=\"bucketList\">\n                    {categories.map((item, i) =>\n                        item !== initialState.categories[0] ? (\n                            <option key={i} value={item}>\n                                {item}\n                            </option>\n                        ) : null\n                    )}\n                </datalist>\n                {errors.name && (\n                    <span className=\"todo-item__error\" role=\"alert\">\n                        {LABELS.TODO.ERROR}\n                    </span>\n                )}\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    categories: [...state.categories],\n});\n\nexport default connect(mapStateToProps)(TodoCategory);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport TodoName from './todo-name/todo-name';\nimport TodoCompleted from './todo-completed/todo-completed';\nimport TodoCategory from './todo-category/todo-category';\nimport './todo.scss';\nimport { addTodo, modifyTodo } from '../../store/action-creators/todos';\nimport { useForm } from 'react-hook-form';\nimport { addCategory } from '../../store/action-creators/categories';\nimport LABELS from '../../globals/constants';\n\nconst Todo = ({ currentTodo, onTodoSave, onCategorySave }) => {\n    const history = useHistory();\n\n    const { register, handleSubmit, errors } = useForm({\n        defaultValues: { ...currentTodo },\n    });\n\n    const onSubmit = (data) => {\n        onTodoSave(\n            {\n                ...data,\n                id: !!currentTodo ? currentTodo.id : undefined,\n                name: data.name.trim(),\n                categoryId: data.categoryId.trim(),\n            },\n            !!currentTodo\n        );\n        onCategorySave(data.categoryId.trim());\n        goBack();\n    };\n\n    const goBack = () => {\n        history.push('/');\n    };\n\n    return (\n        <div className=\"todo-container\">\n            <form className=\"todo-card\" onSubmit={handleSubmit(onSubmit)}>\n                <h1 className=\"todo-card__header\">\n                    {!!currentTodo ? LABELS.TODO.EDITTODO : LABELS.TODO.NEWTODO}\n                </h1>\n                <TodoName register={register} errors={errors} />\n                <TodoCompleted register={register} />\n                <TodoCategory register={register} errors={errors} />\n                <div className=\"todo-card__actions\">\n                    <div\n                        type=\"submit\"\n                        className=\"todo-button todo-button-secondary\"\n                        onClick={goBack}\n                    >\n                        <svg\n                            fill=\"currentColor\"\n                            viewBox=\"0 0 20 20\"\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                        >\n                            <path\n                                fillRule=\"evenodd\"\n                                d=\"M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z\"\n                                clipRule=\"evenodd\"\n                            />\n                        </svg>\n                    </div>\n                    <div\n                        data-testid=\"submit-todo\"\n                        type=\"submit\"\n                        className=\"todo-button todo-button-primary\"\n                        onClick={handleSubmit(onSubmit)}\n                    >\n                        Submit\n                    </div>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    currentTodo: state.todos.find((item) => item.id === state.currentTodo),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    onTodoSave: (todo, isUpdate) =>\n        isUpdate ? dispatch(modifyTodo(todo)) : dispatch(addTodo(todo)),\n    onCategorySave: (category) => dispatch(addCategory(category)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Todo);\n","import React from 'react';\nimport './App.scss';\nimport Header from './components/header/header';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Home from './components/home/home';\nimport { Provider } from 'react-redux';\nimport store from './store/index';\nimport Todo from './components/todo/todo';\n\nfunction App() {\n    return (\n        <Provider store={store}>\n            <Router basename=\"/got-to-do\">\n                <Header />\n                <div className=\"header-placeholder\"></div>\n                <Switch>\n                    <Route path=\"/todo\" component={Todo} />\n                    <Route path=\"*\" component={Home} />\n                </Switch>\n            </Router>\n        </Provider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}